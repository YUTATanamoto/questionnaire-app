{"ast":null,"code":"var _jsxFileName = \"/Users/human/tanamoto/research/art/questionnaire-app/src/components/Questionnaire.js\";\nimport React, { useState, useEffect } from 'react';\nimport MySlider from './MySlider';\nimport { Button, makeStyles } from '@material-ui/core';\nimport logo from \"../logo.svg\";\nconst useStyles = makeStyles({\n  root: {\n    height: \"100%\",\n    width: \"100%\",\n    display: \"grid\"\n  },\n  questionnaireContainer: {\n    display: \"grid\",\n    \"grid-template-rows\": \"1fr\",\n    \"grid-template-columns\": \"1fr 1fr\"\n  },\n  left: {\n    gridRow: 1,\n    gridColumn: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\"\n  },\n  right: {\n    gridRow: 1,\n    gridColumn: 2,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\"\n  },\n  image: {\n    width: \"100%\",\n    rightRow: 1,\n    gridColumn: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\"\n  },\n  sliderContainer: {\n    width: \"100%\"\n  },\n  button: {\n    marginLeft: \"1rem\",\n    height: \"2.5rem\",\n    width: 100\n  }\n});\nconst questionnaires = [{\n  id: 1,\n  descriptionRight: \"好き\",\n  descriptionLeft: \"嫌い\"\n}, {\n  id: 2,\n  descriptionRight: \"快\",\n  descriptionLeft: \"不快\"\n}, {\n  id: 3,\n  descriptionRight: '面白い',\n  descriptionLeft: '退屈な'\n}, {\n  id: 4,\n  descriptionRight: '豊である',\n  descriptionLeft: '豊でない'\n}, {\n  id: 5,\n  descriptionRight: \"ポジティブである\",\n  descriptionLeft: \"ポジティブでない\"\n}, {\n  id: 6,\n  descriptionRight: \"明るい\",\n  descriptionLeft: \"暗い\"\n}, {\n  id: 7,\n  descriptionRight: \"弱々しい\",\n  descriptionLeft: \"力強い\"\n}, {\n  id: 8,\n  descriptionRight: \"平凡な\",\n  descriptionLeft: \"独創的な\"\n}, {\n  id: 9,\n  descriptionRight: \"感情的な\",\n  descriptionLeft: \"理性的な\"\n}];\n\nconst Questionnaire = () => {\n  const classes = useStyles();\n  const [answers, setAnswers] = useState(Array(questionnaires.length).fill(3));\n  useEffect(() => {\n    console.log('useEffect called!', answers);\n  });\n\n  const _setAnswers = newAnswers => setAnswers(newAnswers);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.questionnaireContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.left,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: classes.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.right,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, questionnaires.map((questionnaire, questionnaireIndex) => /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sliderContainer,\n    key: questionnaireIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MySlider, {\n    questionnaire: questionnaire,\n    questionnaireIndex: questionnaireIndex,\n    answers: answers,\n    setAnswers: _setAnswers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, \"Submit\"));\n};\n\nexport default Questionnaire;","map":{"version":3,"sources":["/Users/human/tanamoto/research/art/questionnaire-app/src/components/Questionnaire.js"],"names":["React","useState","useEffect","MySlider","Button","makeStyles","useStyles","root","height","width","display","questionnaireContainer","left","gridRow","gridColumn","flexDirection","justifyContent","right","image","rightRow","sliderContainer","button","marginLeft","questionnaires","id","descriptionRight","descriptionLeft","Questionnaire","classes","answers","setAnswers","Array","length","fill","console","log","_setAnswers","newAnswers","logo","map","questionnaire","questionnaireIndex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MySlider from './MySlider';\nimport { Button, makeStyles } from '@material-ui/core';\nimport logo from '../logo.svg';\n\nconst useStyles = makeStyles({\n  root: {\n    height: \"100%\",\n    width: \"100%\",\n    display: \"grid\",\n  },\n  questionnaireContainer: {\n    display: \"grid\",\n    \"grid-template-rows\": \"1fr\",\n    \"grid-template-columns\": \"1fr 1fr\",\n  },\n  left: {\n    gridRow: 1,\n    gridColumn: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n  },\n  right: {\n    gridRow: 1,\n    gridColumn: 2,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n  },\n  image: {\n    width: \"100%\",\n    rightRow: 1,\n    gridColumn: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n  },\n  sliderContainer: {\n    width: \"100%\",\n  },\n  button: {\n    marginLeft: \"1rem\",\n    height: \"2.5rem\",\n    width: 100,\n  },\n});\n\nconst questionnaires = [\n  {\n    id: 1,\n    descriptionRight: \"好き\",\n    descriptionLeft: \"嫌い\",\n  },\n  {\n    id: 2,\n    descriptionRight: \"快\",\n    descriptionLeft: \"不快\",\n  },\n  {\n    id: 3,\n    descriptionRight: '面白い',\n    descriptionLeft: '退屈な',\n  },\n  {\n    id:4,\n    descriptionRight: '豊である',\n    descriptionLeft: '豊でない',\n  },\n  {\n    id: 5,\n    descriptionRight: \"ポジティブである\",\n    descriptionLeft: \"ポジティブでない\",\n  },\n  {\n    id: 6,\n    descriptionRight: \"明るい\",\n    descriptionLeft: \"暗い\",\n  },\n  {\n    id: 7,\n    descriptionRight: \"弱々しい\",\n    descriptionLeft: \"力強い\",\n  },\n  {\n    id: 8,\n    descriptionRight: \"平凡な\",\n    descriptionLeft: \"独創的な\",\n  },\n  {\n    id: 9,\n    descriptionRight: \"感情的な\",\n    descriptionLeft: \"理性的な\",\n  },\n];\n\nconst Questionnaire = () =>  {\n  const classes = useStyles();\n  const [answers, setAnswers] = useState(Array(questionnaires.length).fill(3));\n  useEffect(() => {\n    console.log('useEffect called!', answers);\n  });\n  const _setAnswers = newAnswers => setAnswers(newAnswers);\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.questionnaireContainer}>\n        <div className={classes.left}>\n          <img src={logo} className={classes.image}/>\n        </div>\n        <div className={classes.right}>\n          {questionnaires.map((questionnaire, questionnaireIndex)=>\n            <div className={classes.sliderContainer} key={questionnaireIndex}>\n              <MySlider\n                questionnaire={questionnaire}\n                questionnaireIndex={questionnaireIndex}\n                answers={answers}\n                setAnswers={_setAnswers}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      <Button variant=\"contained\" color=\"primary\" className={classes.button}>Submit</Button>\n    </div>\n  );\n}\n\nexport default Questionnaire;\n"]},"metadata":{},"sourceType":"module"}