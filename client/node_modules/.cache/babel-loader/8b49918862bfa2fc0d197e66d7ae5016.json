{"ast":null,"code":"var _jsxFileName = \"/Users/human/tanamoto/research/art/questionnaire-app/src/components/MySlider.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    // display: 'flex',\n    flexDirection: 'row'\n  }\n}));\nconst marks = [{\n  value: 1,\n  label: '1'\n}, {\n  value: 2,\n  label: '2'\n}, {\n  value: 3,\n  label: '3'\n}, {\n  value: 4,\n  label: '4'\n}, {\n  value: 5,\n  label: '5'\n}];\n\nconst MySlider = props => {\n  const classes = useStyles();\n  const {\n    questionnaireIndex,\n    questionnaire,\n    answer,\n    answers,\n    setAnswers\n  } = props;\n\n  const _setAnswers = newAnswer => {\n    // console.log(answers);\n    answers.splice(questionnaireIndex, 1, newAnswer); // console.log(answers);\n\n    setTimeout(setAnswers(answers), 1000); // setAnswers(answers);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, questionnaireIndex), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, answers[questionnaireIndex]), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, questionnaire.descriptionLeft), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sliderContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    track: false,\n    min: 1,\n    max: 5,\n    \"aria-labelledby\": \"track-false-slider\",\n    defaultValue: 3,\n    marks: marks,\n    value: answer,\n    onChangeCommitted: (_, value) => _setAnswers(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, questionnaire.descriptionRight));\n};\n\nexport default MySlider;","map":{"version":3,"sources":["/Users/human/tanamoto/research/art/questionnaire-app/src/components/MySlider.js"],"names":["React","makeStyles","Slider","useStyles","theme","root","width","flexDirection","marks","value","label","MySlider","props","classes","questionnaireIndex","questionnaire","answer","answers","setAnswers","_setAnswers","newAnswer","splice","setTimeout","descriptionLeft","sliderContainer","_","descriptionRight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJ;AACAC,IAAAA,aAAa,EAAE;AAHX;AADiC,CAAZ,CAAD,CAA5B;AAQA,MAAMC,KAAK,GAAG,CACZ;AACEC,EAAAA,KAAK,EAAE,CADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADY,EAKZ;AACED,EAAAA,KAAK,EAAE,CADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALY,EASZ;AACED,EAAAA,KAAK,EAAE,CADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CATY,EAaZ;AACED,EAAAA,KAAK,EAAE,CADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAbY,EAiBZ;AACED,EAAAA,KAAK,EAAE,CADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAjBY,CAAd;;AAuBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AACA,QAAM;AAACW,IAAAA,kBAAD;AAAqBC,IAAAA,aAArB;AAAoCC,IAAAA,MAApC;AAA4CC,IAAAA,OAA5C;AAAqDC,IAAAA;AAArD,MAAmEN,KAAzE;;AACA,QAAMO,WAAW,GAAIC,SAAD,IAAe;AACjC;AACAH,IAAAA,OAAO,CAACI,MAAR,CAAeP,kBAAf,EAAmC,CAAnC,EAAsCM,SAAtC,EAFiC,CAGjC;;AACAE,IAAAA,UAAU,CAACJ,UAAU,CAACD,OAAD,CAAX,EAAsB,IAAtB,CAAV,CAJiC,CAKjC;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACR,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIS,kBAAJ,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIG,OAAO,CAACH,kBAAD,CAAX,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,aAAa,CAACQ,eAAlB,CAHF,eAIE;AAAK,IAAA,SAAS,EAAEV,OAAO,CAACW,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE,KADT;AAEE,IAAA,GAAG,EAAE,CAFP;AAGE,IAAA,GAAG,EAAE,CAHP;AAIE,uBAAgB,oBAJlB;AAKE,IAAA,YAAY,EAAE,CALhB;AAME,IAAA,KAAK,EAAEhB,KANT;AAOE,IAAA,KAAK,EAAEQ,MAPT;AAQE,IAAA,iBAAiB,EAAE,CAACS,CAAD,EAAIhB,KAAJ,KAAYU,WAAW,CAACV,KAAD,CAR5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIM,aAAa,CAACW,gBAAlB,CAhBF,CADF;AAoBD,CA/BD;;AAiCA,eAAef,QAAf","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    // display: 'flex',\n    flexDirection: 'row',\n  },\n}));\n\nconst marks = [\n  {\n    value: 1,\n    label: '1',\n  },\n  {\n    value: 2,\n    label: '2',\n  },\n  {\n    value: 3,\n    label: '3',\n  },\n  {\n    value: 4,\n    label: '4',\n  },\n  {\n    value: 5,\n    label: '5',\n  },\n];\n\nconst MySlider = (props) => {\n  const classes = useStyles();\n  const {questionnaireIndex, questionnaire, answer, answers, setAnswers} = props;\n  const _setAnswers = (newAnswer) => {\n    // console.log(answers);\n    answers.splice(questionnaireIndex, 1, newAnswer);\n    // console.log(answers);\n    setTimeout(setAnswers(answers), 1000)\n    // setAnswers(answers);\n  };\n\n  return (\n    <div className={classes.root}>\n      <p>{questionnaireIndex}</p>\n      <p>{answers[questionnaireIndex]}</p>\n      <p>{questionnaire.descriptionLeft}</p>\n      <div className={classes.sliderContainer}>\n        <Slider\n          track={false}\n          min={1}\n          max={5}\n          aria-labelledby=\"track-false-slider\"\n          defaultValue={3}\n          marks={marks}\n          value={answer}\n          onChangeCommitted={(_, value)=>_setAnswers(value)}\n        />\n      </div>\n      <p>{questionnaire.descriptionRight}</p>\n    </div>\n  );\n}\n\nexport default MySlider\n"]},"metadata":{},"sourceType":"module"}