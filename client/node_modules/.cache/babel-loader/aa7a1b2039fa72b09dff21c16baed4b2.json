{"ast":null,"code":"var _jsxFileName = \"/Users/human/tanamoto/research/art/questionnaire-app/src/components/MySlider.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    // display: 'flex',\n    flexDirection: \"row\"\n  }\n}));\nconst marks = [{\n  value: 1,\n  label: \"1\"\n}, {\n  value: 2,\n  label: \"2\"\n}, {\n  value: 3,\n  label: \"3\"\n}, {\n  value: 4,\n  label: \"4\"\n}, {\n  value: 5,\n  label: \"5\"\n}];\n\nconst MySlider = props => {\n  const classes = useStyles();\n  const {\n    questionnaireIndex,\n    questionnaire,\n    answers,\n    setAnswers\n  } = props;\n\n  const _setAnswers = newAnswer => {\n    // using .splice() doesn't work as expected...\n    // answers.splice(questionnaireIndex, 1, newAnswer);\n    const newAnswers = answers.map((answer, index) => {\n      if (index === questionnaireIndex) {\n        return newAnswer;\n      } else {\n        return answer;\n      }\n    });\n    setAnswers(newAnswers);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sliderContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, questionnaire.descriptionLeft), /*#__PURE__*/React.createElement(Slider, {\n    track: false,\n    min: 1,\n    max: 5,\n    \"aria-labelledby\": \"track-false-slider\",\n    defaultValue: 3,\n    marks: marks,\n    value: answers[questionnaireIndex],\n    onChangeCommitted: (_, value) => _setAnswers(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, questionnaire.descriptionRight)));\n};\n\nexport default MySlider;","map":{"version":3,"sources":["/Users/human/tanamoto/research/art/questionnaire-app/src/components/MySlider.js"],"names":["React","makeStyles","Slider","useStyles","theme","root","width","flexDirection","marks","value","label","MySlider","props","classes","questionnaireIndex","questionnaire","answers","setAnswers","_setAnswers","newAnswer","newAnswers","map","answer","index","sliderContainer","descriptionLeft","_","descriptionRight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJ;AACAC,IAAAA,aAAa,EAAE;AAHX;AADiC,CAAZ,CAAD,CAA5B;AAQA,MAAMC,KAAK,GAAG,CACZ;AACEC,EAAAA,KAAK,EAAE,CADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADY,EAKZ;AACED,EAAAA,KAAK,EAAE,CADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALY,EASZ;AACED,EAAAA,KAAK,EAAE,CADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CATY,EAaZ;AACED,EAAAA,KAAK,EAAE,CADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAbY,EAiBZ;AACED,EAAAA,KAAK,EAAE,CADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAjBY,CAAd;;AAuBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AACA,QAAM;AAACW,IAAAA,kBAAD;AAAqBC,IAAAA,aAArB;AAAoCC,IAAAA,OAApC;AAA6CC,IAAAA;AAA7C,MAA2DL,KAAjE;;AACA,QAAMM,WAAW,GAAIC,SAAD,IAAe;AACjC;AACA;AACA,UAAMC,UAAU,GAAGJ,OAAO,CAACK,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KAAiB;AAC9C,UAAIA,KAAK,KAAKT,kBAAd,EAAkC;AAChC,eAAOK,SAAP;AACD,OAFD,MAGK;AACH,eAAOG,MAAP;AACD;AACF,KAPkB,CAAnB;AAQAL,IAAAA,UAAU,CAACG,UAAD,CAAV;AACD,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACR,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEQ,OAAO,CAACW,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIT,aAAa,CAACU,eAAlB,CADF,eAEE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE,KADT;AAEE,IAAA,GAAG,EAAE,CAFP;AAGE,IAAA,GAAG,EAAE,CAHP;AAIE,uBAAgB,oBAJlB;AAKE,IAAA,YAAY,EAAE,CALhB;AAME,IAAA,KAAK,EAAEjB,KANT;AAOE,IAAA,KAAK,EAAEQ,OAAO,CAACF,kBAAD,CAPhB;AAQE,IAAA,iBAAiB,EAAE,CAACY,CAAD,EAAIjB,KAAJ,KAAYS,WAAW,CAACT,KAAD,CAR5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIM,aAAa,CAACY,gBAAlB,CAZF,CADF,CADF;AAkBD,CAnCD;;AAqCA,eAAehB,QAAf","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    // display: 'flex',\n    flexDirection: \"row\",\n  },\n}));\n\nconst marks = [\n  {\n    value: 1,\n    label: \"1\",\n  },\n  {\n    value: 2,\n    label: \"2\",\n  },\n  {\n    value: 3,\n    label: \"3\",\n  },\n  {\n    value: 4,\n    label: \"4\",\n  },\n  {\n    value: 5,\n    label: \"5\",\n  },\n];\n\nconst MySlider = (props) => {\n  const classes = useStyles();\n  const {questionnaireIndex, questionnaire, answers, setAnswers} = props;\n  const _setAnswers = (newAnswer) => {\n    // using .splice() doesn't work as expected...\n    // answers.splice(questionnaireIndex, 1, newAnswer);\n    const newAnswers = answers.map((answer, index)=>{\n      if (index === questionnaireIndex) {\n        return newAnswer;\n      }\n      else {\n        return answer;\n      }\n    });\n    setAnswers(newAnswers);\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.sliderContainer}>\n        <p>{questionnaire.descriptionLeft}</p>\n        <Slider\n          track={false}\n          min={1}\n          max={5}\n          aria-labelledby=\"track-false-slider\"\n          defaultValue={3}\n          marks={marks}\n          value={answers[questionnaireIndex]}\n          onChangeCommitted={(_, value)=>_setAnswers(value)}\n        />\n        <p>{questionnaire.descriptionRight}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default MySlider\n"]},"metadata":{},"sourceType":"module"}