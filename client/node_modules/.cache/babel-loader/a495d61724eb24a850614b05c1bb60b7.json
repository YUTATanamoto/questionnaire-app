{"ast":null,"code":"var _jsxFileName = \"/Users/human/tanamoto/research/art/questionnaire-app/client/src/components/MySlider.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Radio from '@material-ui/core/Radio';\nimport { MARKS } from '../utils/Constants';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  container: {\n    display: \"grid\",\n    \"grid-template-rows\": \"1fr\",\n    \"grid-template-columns\": \"1fr 3fr 1fr\"\n  },\n  descriptionLeft: {\n    gridRow: 1,\n    gridColumn: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    textAlign: 'center',\n    justifyContent: \"space-between\"\n  },\n  slider: {\n    gridRow: 1,\n    gridColumn: 2,\n    display: \"flex\",\n    flexDirection: \"column\",\n    textAlign: 'center',\n    justifyContent: \"space-between\"\n  },\n  descriptionRight: {\n    gridRow: 1,\n    gridColumn: 3,\n    display: \"flex\",\n    flexDirection: \"column\",\n    textAlign: 'center',\n    justifyContent: \"space-between\"\n  }\n}));\n\nconst MySlider = props => {\n  const classes = useStyles();\n  const {\n    questionnaire,\n    answers,\n    setAnswers\n  } = props;\n\n  const _setAnswers = newAnswer => {\n    // using .splice() doesn't work as expected...\n    // answers.splice(questionnaireIndex, 1, newAnswer);\n    const newAnswers = answers.map((answer, index) => {\n      if (answer.questionnaireId === questionnaire.id) {\n        return {\n          questionnaireId: answer.questionnaireId,\n          value: newAnswer\n        };\n      } else {\n        return answer;\n      }\n    });\n    setAnswers(newAnswers);\n  };\n\n  const handleChange = event => {\n    setSelectedValue(event.target.value);\n  };\n\n  const [selectedValue, setSelectedValue] = React.useState('a');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.descriptionLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, questionnaire.descriptionLeft)), /*#__PURE__*/React.createElement(Slider, {\n    track: false,\n    min: 1,\n    max: 5,\n    \"aria-labelledby\": \"track-false-slider\",\n    defaultValue: 3,\n    marks: MARKS,\n    value: answers.find(answer => answer.questionnaireId === questionnaire.id).value,\n    onChangeCommitted: (_, value) => _setAnswers(value),\n    className: classes.sliders,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Radio, {\n    checked: selectedValue === 'a',\n    onChange: handleChange,\n    value: \"a\",\n    name: \"radio-button-demo\",\n    inputProps: {\n      'aria-label': 'A'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Radio, {\n    checked: selectedValue === 'b',\n    onChange: handleChange,\n    value: \"b\",\n    name: \"radio-button-demo\",\n    inputProps: {\n      'aria-label': 'B'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Radio, {\n    checked: selectedValue === 'c',\n    onChange: handleChange,\n    value: \"c\",\n    name: \"radio-button-demo\",\n    inputProps: {\n      'aria-label': 'C'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Radio, {\n    checked: selectedValue === 'd',\n    onChange: handleChange,\n    value: \"d\",\n    color: \"default\",\n    name: \"radio-button-demo\",\n    inputProps: {\n      'aria-label': 'D'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Radio, {\n    checked: selectedValue === 'e',\n    onChange: handleChange,\n    value: \"e\",\n    color: \"default\",\n    name: \"radio-button-demo\",\n    inputProps: {\n      'aria-label': 'E'\n    },\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.descriptionRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, questionnaire.descriptionRight))));\n};\n\nexport default MySlider;","map":{"version":3,"sources":["/Users/human/tanamoto/research/art/questionnaire-app/client/src/components/MySlider.js"],"names":["React","makeStyles","Slider","Radio","MARKS","useStyles","theme","root","width","container","display","descriptionLeft","gridRow","gridColumn","flexDirection","textAlign","justifyContent","slider","descriptionRight","MySlider","props","classes","questionnaire","answers","setAnswers","_setAnswers","newAnswer","newAnswers","map","answer","index","questionnaireId","id","value","handleChange","event","setSelectedValue","target","selectedValue","useState","find","_","sliders"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Radio from '@material-ui/core/Radio';\nimport { MARKS } from '../utils/Constants';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  container: {\n    display: \"grid\",\n    \"grid-template-rows\": \"1fr\",\n    \"grid-template-columns\": \"1fr 3fr 1fr\",\n  },\n  descriptionLeft: {\n    gridRow: 1,\n    gridColumn: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    textAlign: 'center',\n    justifyContent: \"space-between\",\n  },\n  slider: {\n    gridRow: 1,\n    gridColumn: 2,\n    display: \"flex\",\n    flexDirection: \"column\",\n    textAlign: 'center',\n    justifyContent: \"space-between\",\n  },\n  descriptionRight: {\n    gridRow: 1,\n    gridColumn: 3,\n    display: \"flex\",\n    flexDirection: \"column\",\n    textAlign: 'center',\n    justifyContent: \"space-between\",\n  },\n}));\n\nconst MySlider = (props) => {\n  const classes = useStyles();\n  const { questionnaire, answers, setAnswers } = props;\n  const _setAnswers = (newAnswer) => {\n    // using .splice() doesn't work as expected...\n    // answers.splice(questionnaireIndex, 1, newAnswer);\n    const newAnswers = answers.map((answer, index)=>{\n      if (answer.questionnaireId === questionnaire.id) {\n        return {questionnaireId: answer.questionnaireId, value: newAnswer};\n      }\n      else {\n        return answer;\n      }\n    });\n    setAnswers(newAnswers);\n  };\n  const handleChange = (event) => {\n    setSelectedValue(event.target.value);\n  };\n  const [selectedValue, setSelectedValue] = React.useState('a');\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.container}>\n        <div className={classes.descriptionLeft}>\n          <h2>{questionnaire.descriptionLeft}</h2>\n        </div>\n        <Slider\n          track={false}\n          min={1}\n          max={5}\n          aria-labelledby=\"track-false-slider\"\n          defaultValue={3}\n          marks={MARKS}\n          value={answers.find(answer => answer.questionnaireId === questionnaire.id).value}\n          onChangeCommitted={(_, value)=>_setAnswers(value)}\n          className={classes.sliders}\n        />\n        <Radio\n          checked={selectedValue === 'a'}\n          onChange={handleChange}\n          value=\"a\"\n          name=\"radio-button-demo\"\n          inputProps={{ 'aria-label': 'A' }}\n        />\n        <Radio\n          checked={selectedValue === 'b'}\n          onChange={handleChange}\n          value=\"b\"\n          name=\"radio-button-demo\"\n          inputProps={{ 'aria-label': 'B' }}\n        />\n        <Radio\n          checked={selectedValue === 'c'}\n          onChange={handleChange}\n          value=\"c\"\n          name=\"radio-button-demo\"\n          inputProps={{ 'aria-label': 'C' }}\n        />\n        <Radio\n          checked={selectedValue === 'd'}\n          onChange={handleChange}\n          value=\"d\"\n          color=\"default\"\n          name=\"radio-button-demo\"\n          inputProps={{ 'aria-label': 'D' }}\n        />\n        <Radio\n          checked={selectedValue === 'e'}\n          onChange={handleChange}\n          value=\"e\"\n          color=\"default\"\n          name=\"radio-button-demo\"\n          inputProps={{ 'aria-label': 'E' }}\n          size=\"small\"\n        />\n        <div className={classes.descriptionRight}>\n          <h2>{questionnaire.descriptionRight}</h2>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MySlider\n"]},"metadata":{},"sourceType":"module"}