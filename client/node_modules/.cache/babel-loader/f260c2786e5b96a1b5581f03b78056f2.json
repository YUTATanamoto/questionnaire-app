{"ast":null,"code":"var _jsxFileName = \"/Users/human/tanamoto/research/art/questionnaire-app/client/src/components/MyRadioGroup.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport { MARKS } from '../utils/Constants';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  container: {\n    display: \"grid\",\n    \"grid-template-rows\": \"1fr\",\n    \"grid-template-columns\": \"1fr 3fr 1fr\",\n    height: 100,\n    border: 'solid',\n    borderRadius: 20,\n    borderWidth: 1\n  },\n  descriptionLeft: {\n    gridRow: 1,\n    gridColumn: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    textAlign: 'center',\n    justifyContent: \"space-between\"\n  },\n  radioContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    textAlign: 'center',\n    justifyContent: \"space-between\"\n  },\n  descriptionRight: {\n    gridRow: 1,\n    gridColumn: 3,\n    display: \"flex\",\n    flexDirection: \"column\",\n    textAlign: 'center',\n    justifyContent: \"space-between\"\n  }\n}));\n\nconst MyRadioGroup = props => {\n  const classes = useStyles();\n  const {\n    questionnaire,\n    answers,\n    setAnswers\n  } = props;\n\n  const _setAnswers = newAnswer => {\n    // using .splice() doesn't work as expected...\n    // answers.splice(questionnaireIndex, 1, newAnswer);\n    const newAnswers = answers.map((answer, index) => {\n      if (answer.questionnaireId === questionnaire.id) {\n        return {\n          questionnaireId: answer.questionnaireId,\n          value: newAnswer\n        };\n      } else {\n        return answer;\n      }\n    });\n    setAnswers(newAnswers);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.descriptionLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, questionnaire.descriptionLeft)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.radioContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, MARKS.map((mark, key) => {\n    return /*#__PURE__*/React.createElement(Radio, {\n      checked: answers.find(answer => answer.questionnaireId === questionnaire.id).value === mark.label,\n      onChange: e => _setAnswers(e.target.value),\n      value: mark.value,\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.descriptionRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, questionnaire.descriptionRight))));\n};\n\nexport default MyRadioGroup;","map":{"version":3,"sources":["/Users/human/tanamoto/research/art/questionnaire-app/client/src/components/MyRadioGroup.js"],"names":["React","makeStyles","Radio","MARKS","useStyles","theme","root","width","container","display","height","border","borderRadius","borderWidth","descriptionLeft","gridRow","gridColumn","flexDirection","textAlign","justifyContent","radioContainer","descriptionRight","MyRadioGroup","props","classes","questionnaire","answers","setAnswers","_setAnswers","newAnswer","newAnswers","map","answer","index","questionnaireId","id","value","mark","key","find","label","e","target"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport { MARKS } from '../utils/Constants';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  container: {\n    display: \"grid\",\n    \"grid-template-rows\": \"1fr\",\n    \"grid-template-columns\": \"1fr 3fr 1fr\",\n    height: 100,\n    border: 'solid',\n    borderRadius: 20,\n    borderWidth: 1,\n  },\n  descriptionLeft: {\n    gridRow: 1,\n    gridColumn: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    textAlign: 'center',\n    justifyContent: \"space-between\",\n  },\n  radioContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    textAlign: 'center',\n    justifyContent: \"space-between\",\n  },\n  descriptionRight: {\n    gridRow: 1,\n    gridColumn: 3,\n    display: \"flex\",\n    flexDirection: \"column\",\n    textAlign: 'center',\n    justifyContent: \"space-between\",\n  },\n}));\n\nconst MyRadioGroup = (props) => {\n  const classes = useStyles();\n  const { questionnaire, answers, setAnswers } = props;\n  const _setAnswers = (newAnswer) => {\n    // using .splice() doesn't work as expected...\n    // answers.splice(questionnaireIndex, 1, newAnswer);\n    const newAnswers = answers.map((answer, index)=>{\n      if (answer.questionnaireId === questionnaire.id) {\n        return {questionnaireId: answer.questionnaireId, value: newAnswer};\n      }\n      else {\n        return answer;\n      }\n    });\n    setAnswers(newAnswers);\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.container}>\n        <div className={classes.descriptionLeft}>\n          <h2>{questionnaire.descriptionLeft}</h2>\n        </div>\n        <div className={classes.radioContainer}>\n        {MARKS.map((mark, key) => {\n          return (\n            <Radio\n              checked={answers.find(answer => answer.questionnaireId === questionnaire.id).value === mark.label}\n              onChange={e=>_setAnswers(e.target.value)}\n              value={mark.value}\n              key={key}\n            />\n          );\n        })}\n        </div>\n        <div className={classes.descriptionRight}>\n          <h2>{questionnaire.descriptionRight}</h2>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MyRadioGroup\n"]},"metadata":{},"sourceType":"module"}