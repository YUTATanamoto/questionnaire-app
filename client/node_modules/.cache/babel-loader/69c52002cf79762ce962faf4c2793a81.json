{"ast":null,"code":"var _jsxFileName = \"/Users/human/tanamoto/research/art/questionnaire-app/client/src/components/MySlider.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  container: {\n    display: \"grid\",\n    \"grid-template-rows\": \"1fr\",\n    \"grid-template-columns\": \"1fr 3fr 1fr\"\n  },\n  descriptionLeft: {\n    gridRow: 1,\n    gridColumn: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    textAlign: 'center',\n    justifyContent: \"space-between\"\n  },\n  slider: {\n    gridRow: 1,\n    gridColumn: 2,\n    display: \"flex\",\n    flexDirection: \"column\",\n    textAlign: 'center',\n    justifyContent: \"space-between\"\n  },\n  descriptionRight: {\n    gridRow: 1,\n    gridColumn: 3,\n    display: \"flex\",\n    flexDirection: \"column\",\n    textAlign: 'center',\n    justifyContent: \"space-between\"\n  }\n}));\nconst marks = [{\n  value: 1,\n  label: \"1\"\n}, {\n  value: 2,\n  label: \"2\"\n}, {\n  value: 3,\n  label: \"3\"\n}, {\n  value: 4,\n  label: \"4\"\n}, {\n  value: 5,\n  label: \"5\"\n}];\n\nconst MySlider = props => {\n  const classes = useStyles();\n  const {\n    questionnaireIndex,\n    questionnaire,\n    answers,\n    setAnswers\n  } = props;\n\n  const _setAnswers = newAnswer => {\n    // using .splice() doesn't work as expected...\n    // answers.splice(questionnaireIndex, 1, newAnswer);\n    const newAnswers = answers.map((answer, index) => {\n      if (index === questionnaireIndex) {\n        return newAnswer;\n      } else {\n        return answer;\n      }\n    });\n    setAnswers(newAnswers);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.descriptionLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, questionnaire.descriptionLeft)), /*#__PURE__*/React.createElement(Slider, {\n    track: false,\n    min: 1,\n    max: 5,\n    \"aria-labelledby\": \"track-false-slider\",\n    defaultValue: 3,\n    marks: marks,\n    value: answers[questionnaireIndex],\n    onChangeCommitted: (_, value) => _setAnswers(value),\n    className: classes.sliders,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.descriptionRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, questionnaire.descriptionRight))));\n};\n\nexport default MySlider;","map":{"version":3,"sources":["/Users/human/tanamoto/research/art/questionnaire-app/client/src/components/MySlider.js"],"names":["React","makeStyles","Slider","useStyles","theme","root","width","container","display","descriptionLeft","gridRow","gridColumn","flexDirection","textAlign","justifyContent","slider","descriptionRight","marks","value","label","MySlider","props","classes","questionnaireIndex","questionnaire","answers","setAnswers","_setAnswers","newAnswer","newAnswers","map","answer","index","_","sliders"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  container: {\n    display: \"grid\",\n    \"grid-template-rows\": \"1fr\",\n    \"grid-template-columns\": \"1fr 3fr 1fr\",\n  },\n  descriptionLeft: {\n    gridRow: 1,\n    gridColumn: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    textAlign: 'center',\n    justifyContent: \"space-between\",\n  },\n  slider: {\n    gridRow: 1,\n    gridColumn: 2,\n    display: \"flex\",\n    flexDirection: \"column\",\n    textAlign: 'center',\n    justifyContent: \"space-between\",\n  },\n  descriptionRight: {\n    gridRow: 1,\n    gridColumn: 3,\n    display: \"flex\",\n    flexDirection: \"column\",\n    textAlign: 'center',\n    justifyContent: \"space-between\",\n  },\n}));\n\nconst marks = [\n  {\n    value: 1,\n    label: \"1\",\n  },\n  {\n    value: 2,\n    label: \"2\",\n  },\n  {\n    value: 3,\n    label: \"3\",\n  },\n  {\n    value: 4,\n    label: \"4\",\n  },\n  {\n    value: 5,\n    label: \"5\",\n  },\n];\n\nconst MySlider = (props) => {\n  const classes = useStyles();\n  const {questionnaireIndex, questionnaire, answers, setAnswers} = props;\n  const _setAnswers = (newAnswer) => {\n    // using .splice() doesn't work as expected...\n    // answers.splice(questionnaireIndex, 1, newAnswer);\n    const newAnswers = answers.map((answer, index)=>{\n      if (index === questionnaireIndex) {\n        return newAnswer;\n      }\n      else {\n        return answer;\n      }\n    });\n    setAnswers(newAnswers);\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.container}>\n        <div className={classes.descriptionLeft}>\n          <p>{questionnaire.descriptionLeft}</p>\n        </div>\n        <Slider\n          track={false}\n          min={1}\n          max={5}\n          aria-labelledby=\"track-false-slider\"\n          defaultValue={3}\n          marks={marks}\n          value={answers[questionnaireIndex]}\n          onChangeCommitted={(_, value)=>_setAnswers(value)}\n          className={classes.sliders}\n        />\n        <div className={classes.descriptionRight}>\n          <p>{questionnaire.descriptionRight}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MySlider\n"]},"metadata":{},"sourceType":"module"}