{"ast":null,"code":"var _jsxFileName = \"/Users/human/tanamoto/research/art/questionnaire-app/src/components/Questionnaire.js\";\nimport React, { useState, useEffect } from 'react';\nimport MySlider from './MySlider';\nimport { makeStyles } from '@material-ui/styles';\nimport logo from \"../logo.svg\";\nimport Slider from '@material-ui/core/Slider';\nconst useStyles = makeStyles({\n  root: {\n    flex: 1\n  },\n  image: {\n    width: 200\n  },\n  sliderContainer: {\n    width: 200\n  }\n});\nconst questionnaires = [{\n  id: 1,\n  descriptionRight: '好き',\n  descriptionLeft: '嫌い'\n}, {\n  id: 2,\n  descriptionRight: '快',\n  descriptionLeft: '不快'\n}];\nconst initialAnswers = Array(questionnaires.length).fill(3);\nconst marks = [{\n  value: 1,\n  label: '1'\n}, {\n  value: 2,\n  label: '2'\n}, {\n  value: 3,\n  label: '3'\n}, {\n  value: 4,\n  label: '4'\n}, {\n  value: 5,\n  label: '5'\n}];\n\nconst Questionnaire = () => {\n  const classes = useStyles();\n  const [answers, setAnswers] = useState(initialAnswers);\n  useEffect(() => {\n    console.log(answers);\n  });\n\n  const _setAnswers = (newAnswer, questionnaireIndex) => {\n    console.log(answers);\n    answers.splice(questionnaireIndex, 1, newAnswer);\n    console.log(answers);\n    setAnswers(answers);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: classes.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), questionnaires.map((questionnaire, questionnaireIndex) => /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sliderContainer,\n    key: questionnaireIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MySlider, {\n    questionnaire: questionnaire,\n    questionnaireIndex: questionnaireIndex,\n    answers: answers,\n    setAnswers: _setAnswers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Slider, {\n    track: false,\n    min: 1,\n    max: 5,\n    \"aria-labelledby\": \"track-false-slider\",\n    defaultValue: 3,\n    marks: marks,\n    value: answers[questionnaireIndex],\n    onChangeCommitted: (_, value) => {\n      _setAnswers(value, questionnaireIndex);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, answers));\n};\n\nexport default Questionnaire;","map":{"version":3,"sources":["/Users/human/tanamoto/research/art/questionnaire-app/src/components/Questionnaire.js"],"names":["React","useState","useEffect","MySlider","makeStyles","Slider","useStyles","root","flex","image","width","sliderContainer","questionnaires","id","descriptionRight","descriptionLeft","initialAnswers","Array","length","fill","marks","value","label","Questionnaire","classes","answers","setAnswers","console","log","_setAnswers","newAnswer","questionnaireIndex","splice","logo","map","questionnaire","_"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MySlider from './MySlider';\nimport { makeStyles } from '@material-ui/styles';\nimport logo from '../logo.svg';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n  root: {\n    flex: 1,\n  },\n  image: {\n    width: 200,\n  },\n  sliderContainer: {\n    width: 200,\n  },\n});\n\nconst questionnaires = [\n  {\n    id: 1,\n    descriptionRight: '好き',\n    descriptionLeft: '嫌い',\n  },\n  {\n    id: 2,\n    descriptionRight: '快',\n    descriptionLeft: '不快',\n  },\n];\n\nconst initialAnswers = Array(questionnaires.length).fill(3);\n\nconst marks = [\n  {\n    value: 1,\n    label: '1',\n  },\n  {\n    value: 2,\n    label: '2',\n  },\n  {\n    value: 3,\n    label: '3',\n  },\n  {\n    value: 4,\n    label: '4',\n  },\n  {\n    value: 5,\n    label: '5',\n  },\n];\n\nconst Questionnaire = () =>  {\n  const classes = useStyles();\n  const [answers, setAnswers] = useState(initialAnswers);\n  useEffect(() => {\n    console.log(answers);\n  });\n  const _setAnswers = (newAnswer, questionnaireIndex) => {\n    console.log(answers);\n    answers.splice(questionnaireIndex, 1, newAnswer);\n    console.log(answers);\n    \n    setAnswers(answers);\n  };\n  return (\n    <div className={classes.root}>\n      <img src={logo} className={classes.image}/>\n      {questionnaires.map((questionnaire, questionnaireIndex)=>\n        <div className={classes.sliderContainer} key={questionnaireIndex}>\n          <MySlider\n            questionnaire={questionnaire}\n            questionnaireIndex={questionnaireIndex}\n            answers={answers}\n            setAnswers={_setAnswers}\n          />\n          <Slider\n            track={false}\n            min={1}\n            max={5}\n            aria-labelledby=\"track-false-slider\"\n            defaultValue={3}\n            marks={marks}\n            value={answers[questionnaireIndex]}\n            onChangeCommitted={(_, value) => {_setAnswers(value, questionnaireIndex)}}\n          />\n        </div>\n      )}\n      <p>{answers}</p>\n    </div>\n  );\n}\n\nexport default Questionnaire;\n"]},"metadata":{},"sourceType":"module"}