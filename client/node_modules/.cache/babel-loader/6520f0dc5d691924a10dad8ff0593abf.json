{"ast":null,"code":"var _jsxFileName = \"/Users/human/tanamoto/research/art/questionnaire-app/client/src/components/Questionnaire.js\";\nimport React, { useState, useEffect } from 'react';\nimport MySlider from './MySlider';\nimport { Button, makeStyles } from '@material-ui/core';\nconst useStyles = makeStyles({\n  root: {\n    height: \"100%\",\n    width: \"100%\",\n    display: \"grid\"\n  },\n  questionnaireContainer: {\n    display: \"grid\",\n    \"grid-template-rows\": \"1fr\",\n    \"grid-template-columns\": \"3fr 2fr\"\n  },\n  left: {\n    gridRow: 1,\n    gridColumn: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\"\n  },\n  right: {\n    gridRow: 1,\n    gridColumn: 2,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\"\n  },\n  image: {\n    width: \"100%\",\n    rightRow: 1,\n    gridColumn: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\"\n  },\n  sliderContainer: {\n    width: \"100%\"\n  },\n  button: {\n    marginLeft: \"1rem\",\n    height: \"2.5rem\",\n    width: 100\n  }\n});\nconst questionnaires = [{\n  id: 1,\n  descriptionRight: \"好き\",\n  descriptionLeft: \"嫌い\"\n}, {\n  id: 2,\n  descriptionRight: \"快\",\n  descriptionLeft: \"不快\"\n}, {\n  id: 3,\n  descriptionRight: '面白い',\n  descriptionLeft: '退屈な'\n}, {\n  id: 4,\n  descriptionRight: '豊である',\n  descriptionLeft: '豊でない'\n}, {\n  id: 5,\n  descriptionRight: \"ポジティブである\",\n  descriptionLeft: \"ポジティブでない\"\n}, {\n  id: 6,\n  descriptionRight: \"明るい\",\n  descriptionLeft: \"暗い\"\n}, {\n  id: 7,\n  descriptionRight: \"弱々しい\",\n  descriptionLeft: \"力強い\"\n}, {\n  id: 8,\n  descriptionRight: \"平凡な\",\n  descriptionLeft: \"独創的な\"\n}, {\n  id: 9,\n  descriptionRight: \"感情的な\",\n  descriptionLeft: \"理性的な\"\n}];\nconst baseUrl = 'http://localhost:5000';\n\nconst Questionnaire = () => {\n  const image = {\n    id: 1,\n    src: \"./logo512.png\"\n  };\n  const classes = useStyles();\n  const [answers, setAnswers] = useState(Array(questionnaires.length).fill(3));\n  useEffect(() => {\n    console.log('useEffect called !', answers);\n  });\n\n  const _setAnswers = newAnswers => setAnswers(newAnswers);\n\n  async function submitAnswers() {\n    console.log('submit func called !'); // post to server, using fetch etc.\n\n    const data = {\n      imageId: 999,\n      answers: answers\n    };\n    const url = baseUrl + '/answers';\n    const response = await fetch(url, {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      redirect: 'follow',\n      referrerPolicy: 'no-referrer',\n      body: JSON.stringify(data)\n    });\n    console.log(response.json());\n    setAnswers(Array(questionnaires.length).fill(3)); // get next image, using fetch etc.\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.questionnaireContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.left,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: image.src,\n    className: classes.image,\n    alt: imageSrc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.right,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, questionnaires.map((questionnaire, questionnaireIndex) => /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sliderContainer,\n    key: questionnaireIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MySlider, {\n    questionnaire: questionnaire,\n    questionnaireIndex: questionnaireIndex,\n    answers: answers,\n    setAnswers: _setAnswers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    onClick: submitAnswers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, \"Submit\"));\n};\n\nexport default Questionnaire;","map":{"version":3,"sources":["/Users/human/tanamoto/research/art/questionnaire-app/client/src/components/Questionnaire.js"],"names":["React","useState","useEffect","MySlider","Button","makeStyles","useStyles","root","height","width","display","questionnaireContainer","left","gridRow","gridColumn","flexDirection","justifyContent","right","image","rightRow","sliderContainer","button","marginLeft","questionnaires","id","descriptionRight","descriptionLeft","baseUrl","Questionnaire","src","classes","answers","setAnswers","Array","length","fill","console","log","_setAnswers","newAnswers","submitAnswers","data","imageId","url","response","fetch","method","mode","cache","headers","redirect","referrerPolicy","body","JSON","stringify","json","imageSrc","map","questionnaire","questionnaireIndex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MySlider from './MySlider';\nimport { Button, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    height: \"100%\",\n    width: \"100%\",\n    display: \"grid\",\n  },\n  questionnaireContainer: {\n    display: \"grid\",\n    \"grid-template-rows\": \"1fr\",\n    \"grid-template-columns\": \"3fr 2fr\",\n  },\n  left: {\n    gridRow: 1,\n    gridColumn: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n  },\n  right: {\n    gridRow: 1,\n    gridColumn: 2,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n  },\n  image: {\n    width: \"100%\",\n    rightRow: 1,\n    gridColumn: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n  },\n  sliderContainer: {\n    width: \"100%\",\n  },\n  button: {\n    marginLeft: \"1rem\",\n    height: \"2.5rem\",\n    width: 100,\n  },\n});\n\nconst questionnaires = [\n  {\n    id: 1,\n    descriptionRight: \"好き\",\n    descriptionLeft: \"嫌い\",\n  },\n  {\n    id: 2,\n    descriptionRight: \"快\",\n    descriptionLeft: \"不快\",\n  },\n  {\n    id: 3,\n    descriptionRight: '面白い',\n    descriptionLeft: '退屈な',\n  },\n  {\n    id:4,\n    descriptionRight: '豊である',\n    descriptionLeft: '豊でない',\n  },\n  {\n    id: 5,\n    descriptionRight: \"ポジティブである\",\n    descriptionLeft: \"ポジティブでない\",\n  },\n  {\n    id: 6,\n    descriptionRight: \"明るい\",\n    descriptionLeft: \"暗い\",\n  },\n  {\n    id: 7,\n    descriptionRight: \"弱々しい\",\n    descriptionLeft: \"力強い\",\n  },\n  {\n    id: 8,\n    descriptionRight: \"平凡な\",\n    descriptionLeft: \"独創的な\",\n  },\n  {\n    id: 9,\n    descriptionRight: \"感情的な\",\n    descriptionLeft: \"理性的な\",\n  },\n];\n\nconst baseUrl = 'http://localhost:5000';\n\nconst Questionnaire = () =>  {\n  const image = {\n    id: 1,\n    src: \"./logo512.png\",\n  }\n  const classes = useStyles();\n  const [answers, setAnswers] = useState(Array(questionnaires.length).fill(3));\n  useEffect(() => {\n    console.log('useEffect called !', answers);\n  });\n  const _setAnswers = newAnswers => setAnswers(newAnswers);\n  async function submitAnswers() {\n    console.log('submit func called !')\n    // post to server, using fetch etc.\n    const data = {\n      imageId: 999,\n      answers: answers\n    };\n    const url = baseUrl+'/answers'\n    const response = await fetch(url, {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: {'Content-Type': 'application/json'},\n      redirect: 'follow',\n      referrerPolicy: 'no-referrer',\n      body: JSON.stringify(data)\n    });\n    console.log(response.json());\n    setAnswers(Array(questionnaires.length).fill(3));\n    // get next image, using fetch etc.\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.questionnaireContainer}>\n        <div className={classes.left}>\n          <img src={image.src} className={classes.image} alt={imageSrc}/>\n        </div>\n        <div className={classes.right}>\n          {questionnaires.map((questionnaire, questionnaireIndex)=>\n            <div className={classes.sliderContainer} key={questionnaireIndex}>\n              <MySlider\n                questionnaire={questionnaire}\n                questionnaireIndex={questionnaireIndex}\n                answers={answers}\n                setAnswers={_setAnswers}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n        onClick={submitAnswers}\n      >\n        Submit\n      </Button>\n    </div>\n  );\n}\n\nexport default Questionnaire;\n"]},"metadata":{},"sourceType":"module"}